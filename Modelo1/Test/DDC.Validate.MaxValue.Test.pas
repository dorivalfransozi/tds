unit DDC.Validate.MaxValue.Test;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework,
  DDC.Validate,
  DDC.Validate.CustomAttribute,
  M1.ResourceStrings,
  DDC.Validate.MaxValue,
  System.Rtti;

type
  // Test methods for class TMaxValue

  TestTMaxValue = class(TTestCase)
  strict private
    FMaxValue: TMaxValue;
  public
    const
    COLUMN_NAME: String = 'MyProp';
    MAX_VALUE: Integer = 10;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure GetErrorMessage;
    procedure IsValidString;
    procedure IsValidCurrencyLittle;
    procedure IsValidCurrencyEqual;
    procedure IsValidCurrencyGreat;
    procedure IsValidIntegerLittle;
    procedure IsValidIntegerEqual;
    procedure IsValidIntegerGreat;
  end;

implementation

uses
  System.SysUtils;



procedure TestTMaxValue.SetUp;
begin
  FMaxValue := TMaxValue.Create(MAX_VALUE, COLUMN_NAME);
end;



procedure TestTMaxValue.TearDown;
begin
  FMaxValue.Free;
  FMaxValue := nil;
end;



procedure TestTMaxValue.GetErrorMessage;
begin
  CheckTrue(FMaxValue.GetErrorMessage = Format(TResourceStrings.RSValidation_MaxValue, [COLUMN_NAME, MAX_VALUE.ToString]
    ), 'Erro ao formatar mensagem');
end;



procedure TestTMaxValue.IsValidCurrencyEqual;
var
  AValue: TValue;
begin
  AValue := 10.0;
  CheckTrue(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidCurrencyGreat;
var
  AValue: TValue;
begin
  AValue := 11.0;
  CheckFalse(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidCurrencyLittle;
var
  AValue: TValue;
begin
  AValue := 9.0;
  CheckTrue(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidIntegerEqual;
var
  AValue: TValue;
begin
  AValue := 10;
  CheckTrue(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidIntegerGreat;
var
  AValue: TValue;
begin
  AValue := 11;
  CheckFalse(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidIntegerLittle;
var
  AValue: TValue;
begin
  AValue := 9;
  CheckTrue(FMaxValue.isValid(AValue), 'Erro ao validar o número ' + AValue.ToString);
end;



procedure TestTMaxValue.IsValidString;
var
  AValue: TValue;
begin
  AValue := 'abcd';
  CheckFalse(FMaxValue.isValid(AValue), 'String inválida ' + AValue.ToString);
end;

initialization

// Register any test cases with the test runner
RegisterTest(TestTMaxValue.Suite);

end.
